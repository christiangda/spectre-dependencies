include(ExternalProject)
include(ProcessorCount)

# Get the number of cores
ProcessorCount(NCores)

set(DEPENDENCY_NAME "openssl")

message(STATUS "Configuring External Dependency: ${DEPENDENCY_NAME}")
message(STATUS "Build will use ${NCores} cores")

set(OPENSSL_GIT_URL "https://github.com/openssl/openssl.git")
set(OPENSSL_GIT_TAG "openssl-${SPECTRE_OPENSSL_VERSION}")

set(OPENSSL_PREFIX_DIR ${SPECTRE_INSTALL_DIR}/${DEPENDENCY_NAME})

set(OPENSSL_CONFIGURE_COMMAND)
if (WIN32)
  set(OPENSSL_CONFIGURE_COMMAND "${OPENSSL_PREFIX_DIR}\\src\\${DEPENDENCY_NAME}\\Configure")
else()
  set(OPENSSL_CONFIGURE_COMMAND "${OPENSSL_PREFIX_DIR}/src/${DEPENDENCY_NAME}/Configure")
endif()

ExternalProject_Add( ${DEPENDENCY_NAME}
  PREFIX         ${OPENSSL_PREFIX_DIR}

  GIT_REPOSITORY ${OPENSSL_GIT_URL}
  GIT_TAG        ${OPENSSL_GIT_TAG}
  GIT_PROGRESS   TRUE
  GIT_SHALLOW    TRUE

  USES_TERMINAL_DOWNLOAD TRUE

  TEST_COMMAND ""
  UPDATE_COMMAND ""
  PATCH_COMMAND ""

  CONFIGURE_COMMAND
    ${OPENSSL_CONFIGURE_COMMAND}
      --prefix=${OPENSSL_PREFIX_DIR}
      --openssldir=${OPENSSL_PREFIX_DIR}
      no-shared
      no-weak-ssl-ciphers

  BUILD_COMMAND
    make -j${NCores}

  INSTALL_COMMAND
    make install_sw

  INSTALL_DIR ${OPENSSL_PREFIX_DIR}
)

# Directories must be created before adding dependencies
# this is because in the configure step, these directories are used
file(MAKE_DIRECTORY ${OPENSSL_PREFIX_DIR}/lib)
file(MAKE_DIRECTORY ${OPENSSL_PREFIX_DIR}/include)

string(REPLACE "openssl-" "" INTERNAL_PACKAGE_VERSION ${OPENSSL_GIT_TAG})
set(PACKAGE_VERSION ${INTERNAL_PACKAGE_VERSION})

add_library(OpenSSL::SSL STATIC IMPORTED GLOBAL)
add_library(OpenSSL::Crypto STATIC IMPORTED GLOBAL)

set(OPENSSL_LIBCRYPTO_STATIC ${OPENSSL_PREFIX_DIR}/lib/libcrypto.${OPENSSL_LIBRARY_SUFFIX})
set(OPENSSL_LIBSSL_STATIC ${OPENSSL_PREFIX_DIR}/lib/libssl.${OPENSSL_LIBRARY_SUFFIX})

set(OPENSSL_LIBCRYPTO_DEPENDENCIES )
set_target_properties(OpenSSL::Crypto PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES "C"
  IMPORTED_LOCATION ${OPENSSL_LIBCRYPTO_STATIC})
set_property(TARGET OpenSSL::Crypto
  PROPERTY INTERFACE_LINK_LIBRARIES ${OPENSSL_LIBCRYPTO_DEPENDENCIES})

set(OPENSSL_LIBSSL_DEPENDENCIES OpenSSL::Crypto)
set_target_properties(OpenSSL::SSL PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES "C"
  IMPORTED_LOCATION ${OPENSSL_LIBSSL_STATIC})
set_property(TARGET OpenSSL::SSL
  PROPERTY INTERFACE_LINK_LIBRARIES ${OPENSSL_LIBSSL_DEPENDENCIES})

# Directories and names compatible with CMake's FindOpenSSL.cmake
set(OPENSSL_CRYPTO_LIBRARY ${OPENSSL_LIBCRYPTO_STATIC})
set(OPENSSL_CRYPTO_LIBRARIES ${OPENSSL_CRYPTO_LIBRARY} ${OPENSSL_LIBCRYPTO_DEPENDENCIES})
set(OPENSSL_SSL_LIBRARY ${OPENSSL_LIBSSL_STATIC})
set(OPENSSL_SSL_LIBRARIES ${OPENSSL_SSL_LIBRARY} ${OPENSSL_LIBSSL_DEPENDENCIES})
set(OPENSSL_LIBRARIES ${OPENSSL_SSL_LIBRARY} ${OPENSSL_LIBSSL_DEPENDENCIES} ${OPENSSL_LIBCRYPTO_DEPENDENCIES})

set_target_properties(OpenSSL::SSL PROPERTIES
      IMPORTED_LOCATION ${OPENSSL_PREFIX_DIR}/lib/libssl.${OPENSSL_LIBRARY_SUFFIX}
      INTERFACE_INCLUDE_DIRECTORIES ${OPENSSL_PREFIX_DIR}/include
)

set_target_properties(OpenSSL::Crypto PROPERTIES
      IMPORTED_LOCATION ${OPENSSL_PREFIX_DIR}/lib/libcrypto.${OPENSSL_LIBRARY_SUFFIX}
      INTERFACE_INCLUDE_DIRECTORIES ${OPENSSL_PREFIX_DIR}/include
)

message(STATUS "Configuring External Dependency: ${DEPENDENCY_NAME} - DONE")